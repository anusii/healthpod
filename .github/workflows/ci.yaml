name: Lint Checks

# Always run the checks on a push to dev and a PR.

on:
  push:
    branches:
      - dev
  pull_request:
    types: [opened, reopened, synchronize]

env:
  FLUTTER_VERSION: '3.27.0'

jobs:

  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{env.FLUTTER_VERSION}}
      - run: flutter pub get
      - run: flutter analyze --fatal-infos

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{env.FLUTTER_VERSION}}
      - run: flutter pub get
      - run: dart format --set-exit-if-changed .

  markdown:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install -g markdownlint-cli
      - run: markdownlint assets/markdown
        # -p .markdownlintignore -c .markdownlint.yaml

  dcm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
      - name: Install DCM
        uses: CQLabs/setup-dcm@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - run: dcm activate --license-key=DCM_S9398um8y6cO
      - run: dcm calculate-metrics lib
      - run: dcm analyze --fatal-style lib
      # See web site - run: dcm analyze --help
      # Total fail   - run: dcm check-unused-files lib
      # Total fail   - run: dcm check-unused-code lib

  siidcm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{env.FLUTTER_VERSION}}
      - run: flutter pub get
      # 20241025 gjw Remove these for now until we resolve them all
      #
      #- run: dart run dart_code_metrics:metrics check-unnecessary-nullable --disable-sunset-warning lib
      #- run: dart run dart_code_metrics:metrics check-unused-code --disable-sunset-warning lib
      #- run: dart run dart_code_metrics:metrics check-unused-files --disable-sunset-warning lib
      - run: dart run dart_code_metrics:metrics analyze --disable-sunset-warning --fatal-style lib --reporter=console
      - run: find lib -type f -name '*.dart' ! -exec grep -qE '^(/// .*|/// Copyright|/// Licensed)' {} \; -print | xargs printf "\t%s\n"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: ${{env.FLUTTER_VERSION}}
      - run: sudo apt update
      - run: sudo apt install -y clang cmake curl libgtk-3-dev ninja-build pkg-config unzip libunwind-dev
      - run: flutter pub get
      - run: flutter build windows -v
